@namespace Client.Pages.Components.Forms.ReferralDetailsForms
@using Shared.DTOs.Scheduling
@using Shared.DTOs.CRM
@using Shared.Validators.Forms
@using FluentValidation
@using MudBlazor
@using ComposedHealthBase.BaseClient.Services
@using ComposedHealthBase.BaseClient.Components
@using ComposedHealthBase.BaseClient.Enums
@using ComposedHealthBase.Shared.DTOs
@using MSeverity = MudBlazor.Severity
@inject IDialogService DialogService
@inject ISnackbar Snackbar
@inject ILazyLookupService<ReferralDto> ReferralLookupService
@inject ILazyLookupService<CustomerDto> CustomerLookupService

<MudForm @ref="form" Model="Model" Validation="@PphaAdminValidator.ValidateValue" ValidationDelay="0">
    <MudExpansionPanels MultiExpansion="true" Elevation="2" Class="mb-4">
        
        <!-- Personal Information -->
        <MudExpansionPanel Expanded="true">
            <TitleContent>
                <div class="d-flex">
                    <MudIcon Icon="@Icons.Material.Filled.Person" Class="mr-3" />
                    <MudText>Personal Information</MudText>
                </div>
            </TitleContent>
            <ChildContent>
                <MudGrid>
                    <MudItem xs="12" sm="6">
                        <MudTextField @bind-Value="Model.FirstName" For="@(() => Model.FirstName)"
                            Label="First Name" Variant="Variant.Outlined" Required="true" />
                    </MudItem>
                    <MudItem xs="12" sm="6">
                        <MudTextField @bind-Value="Model.LastName" For="@(() => Model.LastName)"
                            Label="Last Name" Variant="Variant.Outlined" Required="true" />
                    </MudItem>
                    <MudItem xs="12" sm="6">
                        <MudTextField @bind-Value="Model.PreviousSurname" For="@(() => Model.PreviousSurname)"
                            Label="Previous Surname (if applicable)" Variant="Variant.Outlined" />
                    </MudItem>
                    <MudItem xs="12" sm="6">
                        <MudDatePicker @bind-Date="Model.DateOfBirth" For="@(() => Model.DateOfBirth)"
                            Label="Date of Birth" Variant="Variant.Outlined" Required="true" />
                    </MudItem>
                    <MudItem xs="12" sm="6">
                        <MudTextField @bind-Value="Model.ContactNumber" For="@(() => Model.ContactNumber)"
                            Label="Contact Number" Variant="Variant.Outlined" />
                    </MudItem>
                    <MudItem xs="12" sm="6">
                        <MudTextField @bind-Value="Model.Email" For="@(() => Model.Email)"
                            Label="Email Address" Variant="Variant.Outlined" Required="true" />
                    </MudItem>
                    <MudItem xs="12">
                        <MudTextField @bind-Value="Model.Address" For="@(() => Model.Address)"
                            Label="Address" Variant="Variant.Outlined" Lines="3" />
                    </MudItem>
                    <MudItem xs="12" sm="6">
                        <MudTextField @bind-Value="Model.GpName" For="@(() => Model.GpName)"
                            Label="GP Name" Variant="Variant.Outlined" />
                    </MudItem>
                    <MudItem xs="12" sm="6">
                        <MudTextField @bind-Value="Model.GpAddress" For="@(() => Model.GpAddress)"
                            Label="GP Address" Variant="Variant.Outlined" />
                    </MudItem>
                </MudGrid>
            </ChildContent>
        </MudExpansionPanel>

        <!-- Employment Details -->
        <MudExpansionPanel Expanded="true">
            <TitleContent>
                <div class="d-flex">
                    <MudIcon Icon="@Icons.Material.Filled.Business" Class="mr-3" />
                    <MudText>Employment Details</MudText>
                </div>
            </TitleContent>
            <ChildContent>
                <MudGrid>
                    <MudItem xs="12" sm="6">
                        <MudTextField @bind-Value="Model.JobTitle" For="@(() => Model.JobTitle)"
                            Label="Job Title" Variant="Variant.Outlined" Required="true" />
                    </MudItem>
                    <MudItem xs="12" sm="6">
                        <MudTextField @bind-Value="Model.CompanyOrganisation" For="@(() => Model.CompanyOrganisation)"
                            Label="Company/Organisation" Variant="Variant.Outlined" Required="true" />
                    </MudItem>
                    <MudItem xs="12" sm="6">
                        <MudTextField @bind-Value="Model.Department" For="@(() => Model.Department)"
                            Label="Department" Variant="Variant.Outlined" />
                    </MudItem>
                    <MudItem xs="12" sm="6">
                        <MudDatePicker @bind-Date="Model.StartDate" For="@(() => Model.StartDate)"
                            Label="Start Date" Variant="Variant.Outlined" />
                    </MudItem>
                    <MudItem xs="12">
                        <MudText Typo="Typo.subtitle2" Class="mb-2">Employment Type</MudText>
                        <MudCheckBox @bind-Value="Model.IsPermanent" For="@(() => Model.IsPermanent)" Label="Permanent Position" />
                        <MudCheckBox @bind-Value="Model.HasAppliedBefore" For="@(() => Model.HasAppliedBefore)" Label="Has Applied Before" />
                    </MudItem>
                    <MudItem xs="12">
                        <MudText Typo="Typo.subtitle2" Class="mb-2">Role Requirements</MudText>
                        <MudCheckBox @bind-Value="Model.RoleIncludesManualHandling" For="@(() => Model.RoleIncludesManualHandling)" Label="Manual Handling" />
                        <MudCheckBox @bind-Value="Model.RoleIncludesDriving" For="@(() => Model.RoleIncludesDriving)" Label="Driving" />
                        <MudCheckBox @bind-Value="Model.RoleIncludesDisplayScreenEquipment" For="@(() => Model.RoleIncludesDisplayScreenEquipment)" Label="Display Screen Equipment" />
                        <MudCheckBox @bind-Value="Model.RoleIncludesWorkingWithVulnerableAdults" For="@(() => Model.RoleIncludesWorkingWithVulnerableAdults)" Label="Working with Vulnerable Adults" />
                        <MudCheckBox @bind-Value="Model.RoleIncludesWorkingWithChildren" For="@(() => Model.RoleIncludesWorkingWithChildren)" Label="Working with Children" />
                    </MudItem>
                </MudGrid>
            </ChildContent>
        </MudExpansionPanel>

        <!-- Health History -->
        <MudExpansionPanel Expanded="true">
            <TitleContent>
                <div class="d-flex">
                    <MudIcon Icon="@Icons.Material.Filled.HealthAndSafety" Class="mr-3" />
                    <MudText>Health History</MudText>
                </div>
            </TitleContent>
            <ChildContent>
                <MudGrid>
                    <MudItem xs="12">
                        <MudText Typo="Typo.subtitle2" Class="mb-2">Do you have any physical illness or disability that might affect your ability to work?</MudText>
                        <MudRadioGroup @bind-Value="Model.PhysicalIllnessAffectsWork" For="@(() => Model.PhysicalIllnessAffectsWork)">
                            <MudRadio Value="true" Color="Color.Primary">Yes</MudRadio>
                            <MudRadio Value="false" Color="Color.Primary">No</MudRadio>
                        </MudRadioGroup>
                        @if (Model.PhysicalIllnessAffectsWork)
                        {
                            <MudTextField @bind-Value="Model.PhysicalIllnessDetails" For="@(() => Model.PhysicalIllnessDetails)"
                                Label="Please provide details" Variant="Variant.Outlined" Lines="3" Class="mt-2" />
                        }
                    </MudItem>
                    <MudItem xs="12">
                        <MudText Typo="Typo.subtitle2" Class="mb-2">Do you have any psychological illness that might affect your ability to work?</MudText>
                        <MudRadioGroup @bind-Value="Model.PsychologicalIllnessAffectsWork" For="@(() => Model.PsychologicalIllnessAffectsWork)">
                            <MudRadio Value="true" Color="Color.Primary">Yes</MudRadio>
                            <MudRadio Value="false" Color="Color.Primary">No</MudRadio>
                        </MudRadioGroup>
                        @if (Model.PsychologicalIllnessAffectsWork)
                        {
                            <MudTextField @bind-Value="Model.PsychologicalIllnessDetails" For="@(() => Model.PsychologicalIllnessDetails)"
                                Label="Please provide details" Variant="Variant.Outlined" Lines="3" Class="mt-2" />
                        }
                    </MudItem>
                    <MudItem xs="12">
                        <MudText Typo="Typo.subtitle2" Class="mb-2">Has your work ever caused you to become ill?</MudText>
                        <MudRadioGroup @bind-Value="Model.WorkCausedIllness" For="@(() => Model.WorkCausedIllness)">
                            <MudRadio Value="true" Color="Color.Primary">Yes</MudRadio>
                            <MudRadio Value="false" Color="Color.Primary">No</MudRadio>
                        </MudRadioGroup>
                        @if (Model.WorkCausedIllness)
                        {
                            <MudTextField @bind-Value="Model.WorkCausedIllnessDetails" For="@(() => Model.WorkCausedIllnessDetails)"
                                Label="Please provide details" Variant="Variant.Outlined" Lines="3" Class="mt-2" />
                        }
                    </MudItem>
                    <MudItem xs="12">
                        <MudText Typo="Typo.subtitle2" Class="mb-2">Are you currently receiving treatment or medication?</MudText>
                        <MudRadioGroup @bind-Value="Model.CurrentTreatmentOrMedication" For="@(() => Model.CurrentTreatmentOrMedication)">
                            <MudRadio Value="true" Color="Color.Primary">Yes</MudRadio>
                            <MudRadio Value="false" Color="Color.Primary">No</MudRadio>
                        </MudRadioGroup>
                        @if (Model.CurrentTreatmentOrMedication)
                        {
                            <MudTextField @bind-Value="Model.CurrentTreatmentDetails" For="@(() => Model.CurrentTreatmentDetails)"
                                Label="Please provide details" Variant="Variant.Outlined" Lines="3" Class="mt-2" />
                        }
                    </MudItem>
                    <MudItem xs="12">
                        <MudText Typo="Typo.subtitle2" Class="mb-2">Are you taking any medication?</MudText>
                        <MudRadioGroup @bind-Value="Model.TakingMedication" For="@(() => Model.TakingMedication)">
                            <MudRadio Value="true" Color="Color.Primary">Yes</MudRadio>
                            <MudRadio Value="false" Color="Color.Primary">No</MudRadio>
                        </MudRadioGroup>
                        @if (Model.TakingMedication)
                        {
                            <MudTextField @bind-Value="Model.MedicationDetails" For="@(() => Model.MedicationDetails)"
                                Label="Please provide details" Variant="Variant.Outlined" Lines="3" Class="mt-2" />
                        }
                    </MudItem>
                    <MudItem xs="12">
                        <MudText Typo="Typo.subtitle2" Class="mb-2">Do you have any allergies?</MudText>
                        <MudRadioGroup @bind-Value="Model.HasAllergies" For="@(() => Model.HasAllergies)">
                            <MudRadio Value="true" Color="Color.Primary">Yes</MudRadio>
                            <MudRadio Value="false" Color="Color.Primary">No</MudRadio>
                        </MudRadioGroup>
                        @if (Model.HasAllergies)
                        {
                            <MudTextField @bind-Value="Model.AllergiesDetails" For="@(() => Model.AllergiesDetails)"
                                Label="Please provide details" Variant="Variant.Outlined" Lines="3" Class="mt-2" />
                        }
                    </MudItem>
                    <MudItem xs="12">
                        <MudText Typo="Typo.subtitle2" Class="mb-2">Do you need any adjustments to perform your work?</MudText>
                        <MudRadioGroup @bind-Value="Model.NeedsAdjustments" For="@(() => Model.NeedsAdjustments)">
                            <MudRadio Value="true" Color="Color.Primary">Yes</MudRadio>
                            <MudRadio Value="false" Color="Color.Primary">No</MudRadio>
                        </MudRadioGroup>
                        @if (Model.NeedsAdjustments)
                        {
                            <MudTextField @bind-Value="Model.AdjustmentsDetails" For="@(() => Model.AdjustmentsDetails)"
                                Label="Please provide details" Variant="Variant.Outlined" Lines="3" Class="mt-2" />
                        }
                    </MudItem>
                    <MudItem xs="12">
                        <MudText Typo="Typo.subtitle2" Class="mb-2">Do you drink alcohol?</MudText>
                        <MudRadioGroup @bind-Value="Model.DrinksAlcohol" For="@(() => Model.DrinksAlcohol)">
                            <MudRadio Value="true" Color="Color.Primary">Yes</MudRadio>
                            <MudRadio Value="false" Color="Color.Primary">No</MudRadio>
                        </MudRadioGroup>
                        @if (Model.DrinksAlcohol)
                        {
                            <MudTextField @bind-Value="Model.AlcoholUnitsPerWeek" For="@(() => Model.AlcoholUnitsPerWeek)"
                                Label="How many units per week?" Variant="Variant.Outlined" Class="mt-2" />
                        }
                    </MudItem>
                </MudGrid>
            </ChildContent>
        </MudExpansionPanel>

        <!-- Work Related History -->
        <MudExpansionPanel Expanded="true">
            <TitleContent>
                <div class="d-flex">
                    <MudIcon Icon="@Icons.Material.Filled.Work" Class="mr-3" />
                    <MudText>Work Related History</MudText>
                </div>
            </TitleContent>
            <ChildContent>
                <MudGrid>
                    <MudItem xs="12">
                        <MudText Typo="Typo.subtitle2" Class="mb-2">Have you been absent from work due to illness in the last 12 months?</MudText>
                        <MudRadioGroup @bind-Value="Model.AbsentFromWorkDueToIllness" For="@(() => Model.AbsentFromWorkDueToIllness)">
                            <MudRadio Value="true" Color="Color.Primary">Yes</MudRadio>
                            <MudRadio Value="false" Color="Color.Primary">No</MudRadio>
                        </MudRadioGroup>
                        @if (Model.AbsentFromWorkDueToIllness)
                        {
                            <MudTextField @bind-Value="Model.AbsentFromWorkDetails" For="@(() => Model.AbsentFromWorkDetails)"
                                Label="Please provide details" Variant="Variant.Outlined" Lines="3" Class="mt-2" />
                        }
                    </MudItem>
                    <MudItem xs="12">
                        <MudText Typo="Typo.subtitle2" Class="mb-2">Have you ever left employment for medical reasons?</MudText>
                        <MudRadioGroup @bind-Value="Model.LeftEmploymentMedicalReasons" For="@(() => Model.LeftEmploymentMedicalReasons)">
                            <MudRadio Value="true" Color="Color.Primary">Yes</MudRadio>
                            <MudRadio Value="false" Color="Color.Primary">No</MudRadio>
                        </MudRadioGroup>
                        @if (Model.LeftEmploymentMedicalReasons)
                        {
                            <MudTextField @bind-Value="Model.LeftEmploymentDetails" For="@(() => Model.LeftEmploymentDetails)"
                                Label="Please provide details" Variant="Variant.Outlined" Lines="3" Class="mt-2" />
                        }
                    </MudItem>
                    <MudItem xs="12">
                        <MudText Typo="Typo.subtitle2" Class="mb-2">Have you ever been denied a driving licence for medical reasons?</MudText>
                        <MudRadioGroup @bind-Value="Model.DeniedDrivingLicenceMedical" For="@(() => Model.DeniedDrivingLicenceMedical)">
                            <MudRadio Value="true" Color="Color.Primary">Yes</MudRadio>
                            <MudRadio Value="false" Color="Color.Primary">No</MudRadio>
                        </MudRadioGroup>
                        @if (Model.DeniedDrivingLicenceMedical)
                        {
                            <MudTextField @bind-Value="Model.DeniedDrivingLicenceDetails" For="@(() => Model.DeniedDrivingLicenceDetails)"
                                Label="Please provide details" Variant="Variant.Outlined" Lines="3" Class="mt-2" />
                        }
                    </MudItem>
                    <MudItem xs="12">
                        <MudText Typo="Typo.subtitle2" Class="mb-2">Do you have any work-related health conditions?</MudText>
                        <MudRadioGroup @bind-Value="Model.WorkRelatedHealthCondition" For="@(() => Model.WorkRelatedHealthCondition)">
                            <MudRadio Value="true" Color="Color.Primary">Yes</MudRadio>
                            <MudRadio Value="false" Color="Color.Primary">No</MudRadio>
                        </MudRadioGroup>
                        @if (Model.WorkRelatedHealthCondition)
                        {
                            <MudTextField @bind-Value="Model.WorkRelatedHealthDetails" For="@(() => Model.WorkRelatedHealthDetails)"
                                Label="Please provide details" Variant="Variant.Outlined" Lines="3" Class="mt-2" />
                        }
                    </MudItem>
                    <MudItem xs="12">
                        <MudText Typo="Typo.subtitle2" Class="mb-2">Are you in any statutory medical roles?</MudText>
                        <MudRadioGroup @bind-Value="Model.StatutoryMedicalRoles" For="@(() => Model.StatutoryMedicalRoles)">
                            <MudRadio Value="true" Color="Color.Primary">Yes</MudRadio>
                            <MudRadio Value="false" Color="Color.Primary">No</MudRadio>
                        </MudRadioGroup>
                        @if (Model.StatutoryMedicalRoles)
                        {
                            <MudTextField @bind-Value="Model.StatutoryMedicalDetails" For="@(() => Model.StatutoryMedicalDetails)"
                                Label="Please provide details" Variant="Variant.Outlined" Lines="3" Class="mt-2" />
                        }
                    </MudItem>
                    <MudItem xs="12">
                        <MudTextField @bind-Value="Model.AdditionalRelevantInformation" For="@(() => Model.AdditionalRelevantInformation)"
                            Label="Any additional relevant information" Variant="Variant.Outlined" Lines="4" />
                    </MudItem>
                </MudGrid>
            </ChildContent>
        </MudExpansionPanel>

        <!-- Medical Consent -->
        <MudExpansionPanel Expanded="true">
            <TitleContent>
                <div class="d-flex">
                    <MudIcon Icon="@Icons.Material.Filled.Security" Class="mr-3" />
                    <MudText>Medical Consent</MudText>
                </div>
            </TitleContent>
            <ChildContent>
                <MudGrid>
                    <MudItem xs="12">
                        <MudCheckBox @bind-Value="Model.ConsentToMedicalRecordsDisclosure" For="@(() => Model.ConsentToMedicalRecordsDisclosure)" 
                            Label="I consent to the disclosure of medical records for occupational health purposes" />
                    </MudItem>
                    <MudItem xs="12">
                        <MudCheckBox @bind-Value="Model.WishToSeeMedicalInformationFirst" For="@(() => Model.WishToSeeMedicalInformationFirst)" 
                            Label="I wish to see medical information before it is disclosed" />
                    </MudItem>
                </MudGrid>
            </ChildContent>
        </MudExpansionPanel>

        <!-- Declaration -->
        <MudExpansionPanel Expanded="true">
            <TitleContent>
                <div class="d-flex">
                    <MudIcon Icon="@Icons.Material.Filled.Assignment" Class="mr-3" />
                    <MudText>Declaration</MudText>
                </div>
            </TitleContent>
            <ChildContent>
                <MudGrid>
                    <MudItem xs="12">
                        <MudText Typo="Typo.body2" Class="mb-2">
                            I declare that the information given in this form is true and complete. I understand that any false information may lead to the refusal of my application or cancellation of employment.
                        </MudText>
                        <MudCheckBox @bind-Value="Model.DeclarationSigned" For="@(() => Model.DeclarationSigned)" 
                            Label="I agree to the above declaration" />
                    </MudItem>
                    <MudItem xs="12" sm="6">
                        <MudTextField @bind-Value="Model.DeclarationSignature" For="@(() => Model.DeclarationSignature)"
                            Label="Digital Signature" Variant="Variant.Outlined" />
                    </MudItem>
                    <MudItem xs="12" sm="6">
                        <MudDatePicker @bind-Date="Model.DeclarationDate" For="@(() => Model.DeclarationDate)"
                            Label="Date" Variant="Variant.Outlined" />
                    </MudItem>
                </MudGrid>
            </ChildContent>
        </MudExpansionPanel>

        <!-- Additional Comments -->
        <MudExpansionPanel Expanded="true">
            <TitleContent>
                <div class="d-flex">
                    <MudIcon Icon="@Icons.Material.Filled.Comment" Class="mr-3" />
                    <MudText>Additional Comments</MudText>
                </div>
            </TitleContent>
            <ChildContent>
                <MudTextField @bind-Value="Model.AdditionalComments" For="@(() => Model.AdditionalComments)"
                    Label="Any additional comments" Variant="Variant.Outlined" Lines="4" />
            </ChildContent>
        </MudExpansionPanel>

    </MudExpansionPanels>

    <!-- Action Buttons -->
    <MudCardActions Class="mt-4">
        <MudButton Variant="Variant.Filled" Color="Color.Primary" 
            OnClick="@(async () => await Save())" 
            Disabled="@_saving"
            Class="ml-auto">
            @if (_saving)
            {
                <MudProgressCircular Color="Color.Default" Size="Size.Small" Indeterminate="true" />
                <MudText Class="ml-2">@(IsNewReferral ? "Submitting..." : "Updating...")</MudText>
            }
            else
            {
                <MudIcon Icon="@Icons.Material.Filled.Save" Class="mr-2" />
                <MudText>@(IsNewReferral ? "Submit Form" : "Update Form")</MudText>
            }
        </MudButton>
    </MudCardActions>
</MudForm>

@code {
    [Parameter] public PphaFormAdminDto Model { get; set; } = new();
    [Parameter] public EventCallback<PphaFormAdminDto> OnSaveComplete { get; set; }
    [Parameter] public EventCallback<PphaFormAdminDto> OnSubmitComplete { get; set; }
    [Parameter] public Guid CustomerId { get; set; } = Guid.Empty;
    [Parameter] public bool ShowAsDialog { get; set; } = false;

    private PphaFormAdminValidator PphaAdminValidator { get; set; } = new();
    private MudForm form = new();
    private bool _saving = false;
    
    private bool IsNewReferral => Model.Id == Guid.Empty;

    protected override void OnInitialized()
    {
        if (CustomerId != Guid.Empty && Model.ReferralId == Guid.Empty)
        {
            Model.ReferralId = CustomerId;
        }
    }

    private async Task Save()
    {
        await form.Validate();
        if (form.IsValid)
        {
            _saving = true;
            StateHasChanged();
            
            try
            {
                if (OnSaveComplete.HasDelegate)
                {
                    await OnSaveComplete.InvokeAsync(Model);
                }
                
                Snackbar.Add("PPHA Admin form saved successfully!", MSeverity.Success);
            }
            catch (Exception ex)
            {
                Snackbar.Add($"Failed to save form: {ex.Message}", MSeverity.Error);
                Console.Error.WriteLine($"Error saving PPHA Admin form: {ex}");
            }
            finally
            {
                _saving = false;
                StateHasChanged();
            }
        }
        else
        {
            Snackbar.Add("Please correct the validation errors before submitting.", MSeverity.Error);
        }
    }
}