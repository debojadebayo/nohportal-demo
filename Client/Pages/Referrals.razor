@page "/referrals"
@using Microsoft.AspNetCore.Authorization
@using Shared.DTOs.CRM
@using Shared.DTOs.Scheduling
@inject IHttpClientFactory HttpClientFactory
@* @attribute [Authorize] *@

<PageTitle>Referrals</PageTitle>

<MudText Typo="Typo.h1">Referrals</MudText>
<MudText Typo="Typo.h2">Referral list</MudText>
<MudDataGrid Items="@referrals">
	<Columns>
		<PropertyColumn Property="x => x.CustomerId" Title="Customer" />
		<PropertyColumn Property="x => x.Id" Title="Referral ID" />
		<PropertyColumn Property="x => x.PatientId" Title="Patient ID" />
		<PropertyColumn Property="x => x.ReferralDetails" Title="Details" />
		<PropertyColumn Property="x => x.DocumentId" Title="Document ID" />
	</Columns>
</MudDataGrid>
<MudText Typo="Typo.h2">Add Referral</MudText>
<MudForm>
	<MudTextField Variant="Variant.Outlined" T="string" Label="Referral Details" @bind-Value=@newReferral.ReferralDetails />
	<MudTextField Variant="Variant.Outlined" T="string" Label="Document ID" @bind-Value=@newReferral.DocumentId />
	<MudTextField Variant="Variant.Outlined" T="long" Label="Customer ID" @bind-Value=@newReferral.CustomerId />
	<MudTextField Variant="Variant.Outlined" T="long" Label="Patient ID" @bind-Value=@newReferral.PatientId />
	<MudButton @onclick=AddReferral>Add Referral</MudButton>
</MudForm>

@code {
	private ReferralDto newReferral = new();
	private IEnumerable<ReferralDto>? referrals;
	private HttpClient? httpClient;

	protected override async Task OnInitializedAsync()
	{
		try
		{
			httpClient = HttpClientFactory.CreateClient("api");
			referrals = await httpClient.GetFromJsonAsync<ReferralDto[]>("api/referrals");
		}
		catch (Exception ex)
		{
			Console.WriteLine($"Error fetching referral data: {ex.Message}");
		}
	}
	private async Task AddReferral(){
		var response = await httpClient.PostAsJsonAsync("api/referrals", newReferral);
		if (response != null)
		{
			newReferral = new();
			referrals = await httpClient.GetFromJsonAsync<ReferralDto[]>("api/referrals");
		}
	}
}
