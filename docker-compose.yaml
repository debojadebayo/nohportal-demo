services:
  # app.client:
  #   container_name: Client
  #   image: app.client
  #   build:
  #     context: .
  #     dockerfile: Client.Dockerfile
  #   ports:
  #     - "5002:8080"
  #   environment:
  #     ASPNETCORE_ENVIRONMENT: Development

  app.server:
    container_name: Server
    image: app.server
    build:
      context: .
      dockerfile: Server.Dockerfile
    ports:
      - "5003:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    depends_on:
      - app.database
    volumes:
      - ./:/app

  app.database:
    container_name: app.database
    image: postgres:17.4
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: postgres
    ports:
      - "5435:5432"
    volumes:
      - app-db:/var/lib/postgresql/data

  keycloak.database:
    container_name: keycloak.database
    image: postgres:17.4
    environment:
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: keycloak
    ports:
      - "5434:5432"
    volumes:
      - keycloak-db:/var/lib/postgresql/data

  keycloak:
    image: keycloak/keycloak:26.1
    container_name: keycloak
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: 123
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak.database:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: 123
      KC_FEATURES: organization,admin-fine-grained-authz
    ports:
      - "8180:8080"
    command: start-dev
    depends_on:
      - keycloak.database

  app.blobstorage:
    container_name: Blobstorage
    image: mcr.microsoft.com/azure-storage/azurite:latest
    ports:
      - "9000:9000"
    command: azurite-blob --blobHost 0.0.0.0 -l /data
    volumes:
      - ./.containers/blob_storage/data:/data

volumes:
  keycloak-db:
  app-db: