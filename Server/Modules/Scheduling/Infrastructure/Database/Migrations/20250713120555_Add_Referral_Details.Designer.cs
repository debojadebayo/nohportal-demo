// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Server.Modules.Scheduling.Infrastructure.Database;
using Shared.DTOs.Scheduling;

#nullable disable

namespace Server.Modules.Scheduling.Infrastructure.Database.Migrations
{
    [DbContext(typeof(SchedulingDbContext))]
    [Migration("20250713120555_Add_Referral_Details")]
    partial class Add_Referral_Details
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("scheduling")
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Server.Modules.Scheduling.Entities.Clinician", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("AvatarDescription")
                        .HasColumnType("text");

                    b.Property<string>("AvatarImage")
                        .HasColumnType("text");

                    b.Property<string>("AvatarTitle")
                        .HasColumnType("text");

                    b.Property<int>("ClinicianType")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<Guid>("KeycloakId")
                        .HasColumnType("uuid");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LicenceNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("RegulatorType")
                        .HasColumnType("integer");

                    b.Property<string>("RoleName")
                        .HasColumnType("text");

                    b.Property<string>("SearchTags")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uuid");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uuid");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Clinicians", "scheduling");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            AvatarDescription = "Senior Doctor, GMC",
                            AvatarImage = "https://randomuser.me/api/portraits/women/1.jpg",
                            AvatarTitle = "Dr. Alice Smith",
                            ClinicianType = 1,
                            CreatedBy = "System",
                            CreatedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "alice.smith@example.com",
                            FirstName = "Alice",
                            IsActive = false,
                            KeycloakId = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d479"),
                            LastModifiedBy = "System",
                            LastName = "Smith",
                            LicenceNumber = "GMC1001",
                            ModifiedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegulatorType = 1,
                            SearchTags = "1 Alice Smith, Senior Doctor, GMC, GMC1001",
                            SubjectId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Telephone = "555-1001",
                            TenantId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Username = "AliceSmith"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            AvatarDescription = "Junior Doctor, GMC",
                            AvatarImage = "https://randomuser.me/api/portraits/men/2.jpg",
                            AvatarTitle = "Dr. Bob Johnson",
                            ClinicianType = 2,
                            CreatedBy = "System",
                            CreatedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "bob.johnson@example.com",
                            FirstName = "Bob",
                            IsActive = false,
                            KeycloakId = new Guid("9c8b7a6d-5e4f-3c2b-1a09-876543210fed"),
                            LastModifiedBy = "System",
                            LastName = "Johnson",
                            LicenceNumber = "GMC1002",
                            ModifiedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegulatorType = 1,
                            SearchTags = "2 Bob Johnson, Junior Doctor, GMC, GMC1002",
                            SubjectId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Telephone = "555-1002",
                            TenantId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Username = "BobJohnson"
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            AvatarDescription = "Nurse, NMC",
                            AvatarImage = "https://randomuser.me/api/portraits/women/3.jpg",
                            AvatarTitle = "Nurse Carol Williams",
                            ClinicianType = 3,
                            CreatedBy = "System",
                            CreatedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "carol.williams@example.com",
                            FirstName = "Carol",
                            IsActive = false,
                            KeycloakId = new Guid("123e4567-e89b-12d3-a456-426614174000"),
                            LastModifiedBy = "System",
                            LastName = "Williams",
                            LicenceNumber = "NMC1003",
                            ModifiedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegulatorType = 2,
                            SearchTags = "3 Carol Williams, Nurse, NMC, NMC1003",
                            SubjectId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Telephone = "555-1003",
                            TenantId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Username = "CarolWilliams"
                        },
                        new
                        {
                            Id = new Guid("44444444-4444-4444-4444-444444444444"),
                            AvatarDescription = "Senior Doctor, GMC",
                            AvatarImage = "https://randomuser.me/api/portraits/men/4.jpg",
                            AvatarTitle = "Dr. David Brown",
                            ClinicianType = 1,
                            CreatedBy = "System",
                            CreatedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "david.brown@example.com",
                            FirstName = "David",
                            IsActive = false,
                            KeycloakId = new Guid("ba012345-6789-abcd-0123-456789abcdef"),
                            LastModifiedBy = "System",
                            LastName = "Brown",
                            LicenceNumber = "GMC1004",
                            ModifiedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegulatorType = 1,
                            SearchTags = "4 David Brown, Senior Doctor, GMC, GMC1004",
                            SubjectId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Telephone = "555-1004",
                            TenantId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Username = "DavidBrown"
                        },
                        new
                        {
                            Id = new Guid("55555555-5555-5555-5555-555555555555"),
                            AvatarDescription = "Nurse, NMC",
                            AvatarImage = "https://randomuser.me/api/portraits/women/5.jpg",
                            AvatarTitle = "Nurse Eva Jones",
                            ClinicianType = 3,
                            CreatedBy = "System",
                            CreatedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "eva.jones@example.com",
                            FirstName = "Eva",
                            IsActive = false,
                            KeycloakId = new Guid("00112233-4455-6677-8899-aabbccddeeff"),
                            LastModifiedBy = "System",
                            LastName = "Jones",
                            LicenceNumber = "NMC1005",
                            ModifiedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegulatorType = 2,
                            SearchTags = "5 Eva Jones, Nurse, NMC, NMC1005",
                            SubjectId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Telephone = "555-1005",
                            TenantId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Username = "EvaJones"
                        },
                        new
                        {
                            Id = new Guid("66666666-6666-6666-6666-666666666666"),
                            AvatarDescription = "Junior Doctor, GMC",
                            AvatarImage = "https://randomuser.me/api/portraits/men/6.jpg",
                            AvatarTitle = "Dr. Frank Garcia",
                            ClinicianType = 2,
                            CreatedBy = "System",
                            CreatedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "frank.garcia@example.com",
                            FirstName = "Frank",
                            IsActive = false,
                            KeycloakId = new Guid("ffeeddcc-bbaa-9988-7766-554433221100"),
                            LastModifiedBy = "System",
                            LastName = "Garcia",
                            LicenceNumber = "GMC1006",
                            ModifiedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegulatorType = 1,
                            SearchTags = "6 Frank Garcia, Junior Doctor, GMC, GMC1006",
                            SubjectId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Telephone = "555-1006",
                            TenantId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Username = "FrankGarcia"
                        },
                        new
                        {
                            Id = new Guid("77777777-7777-7777-7777-777777777777"),
                            AvatarDescription = "Nurse, NMC",
                            AvatarImage = "https://randomuser.me/api/portraits/women/7.jpg",
                            AvatarTitle = "Nurse Grace Martinez",
                            ClinicianType = 3,
                            CreatedBy = "System",
                            CreatedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "grace.martinez@example.com",
                            FirstName = "Grace",
                            IsActive = false,
                            KeycloakId = new Guid("abcdef01-2345-6789-abcd-ef0123456789"),
                            LastModifiedBy = "System",
                            LastName = "Martinez",
                            LicenceNumber = "NMC1007",
                            ModifiedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegulatorType = 2,
                            SearchTags = "7 Grace Martinez, Nurse, NMC, NMC1007",
                            SubjectId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Telephone = "555-1007",
                            TenantId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Username = "GraceMartinez"
                        },
                        new
                        {
                            Id = new Guid("88888888-8888-8888-8888-888888888888"),
                            AvatarDescription = "Senior Doctor, GMC",
                            AvatarImage = "https://randomuser.me/api/portraits/men/8.jpg",
                            AvatarTitle = "Dr. Henry Lee",
                            ClinicianType = 1,
                            CreatedBy = "System",
                            CreatedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "henry.lee@example.com",
                            FirstName = "Henry",
                            IsActive = false,
                            KeycloakId = new Guid("fedcba98-7654-3210-fedc-ba9876543210"),
                            LastModifiedBy = "System",
                            LastName = "Lee",
                            LicenceNumber = "GMC1008",
                            ModifiedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegulatorType = 1,
                            SearchTags = "8 Henry Lee, Senior Doctor, GMC, GMC1008",
                            SubjectId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Telephone = "555-1008",
                            TenantId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Username = "HenryLee"
                        },
                        new
                        {
                            Id = new Guid("99999999-9999-9999-9999-999999999999"),
                            AvatarDescription = "Nurse, NMC",
                            AvatarImage = "https://randomuser.me/api/portraits/women/9.jpg",
                            AvatarTitle = "Nurse Ivy Walker",
                            ClinicianType = 3,
                            CreatedBy = "System",
                            CreatedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ivy.walker@example.com",
                            FirstName = "Ivy",
                            IsActive = false,
                            KeycloakId = new Guid("1a2b3c4d-5e6f-7a8b-9c0d-1e2f3a4b5c6d"),
                            LastModifiedBy = "System",
                            LastName = "Walker",
                            LicenceNumber = "NMC1009",
                            ModifiedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegulatorType = 2,
                            SearchTags = "9 Ivy Walker, Nurse, NMC, NMC1009",
                            SubjectId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Telephone = "555-1009",
                            TenantId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Username = "IvyWalker"
                        },
                        new
                        {
                            Id = new Guid("10101010-1010-1010-1010-101010101010"),
                            AvatarDescription = "Junior Doctor, GMC",
                            AvatarImage = "https://randomuser.me/api/portraits/men/10.jpg",
                            AvatarTitle = "Dr. Jack Hall",
                            ClinicianType = 2,
                            CreatedBy = "System",
                            CreatedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jack.hall@example.com",
                            FirstName = "Jack",
                            IsActive = false,
                            KeycloakId = new Guid("a1b2c3d4-e5f6-a7b8-c9d0-e1f2a3b4c5d6"),
                            LastModifiedBy = "System",
                            LastName = "Hall",
                            LicenceNumber = "GMC1010",
                            ModifiedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegulatorType = 1,
                            SearchTags = "10 Jack Hall, Junior Doctor, GMC, GMC1010",
                            SubjectId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Telephone = "555-1010",
                            TenantId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Username = "JackHall"
                        });
                });

            modelBuilder.Entity("Server.Modules.Scheduling.Entities.Referral", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid");

                    b.Property<ReferralDetailsDto>("Details")
                        .HasColumnType("jsonb");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ReferralDetails")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ReferralStatus")
                        .HasColumnType("integer");

                    b.PrimitiveCollection<Guid[]>("RelatedDocumentIds")
                        .IsRequired()
                        .HasColumnType("uuid[]");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uuid");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Referrals", "scheduling");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            CreatedBy = "System",
                            CreatedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = new Guid("11111111-1111-1111-1111-111111111111"),
                            EmployeeId = new Guid("11111111-aaaa-aaaa-aaaa-111111111111"),
                            IsActive = false,
                            LastModifiedBy = "System",
                            ModifiedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReferralDetails = "Routine checkup for hypertension.",
                            ReferralStatus = 0,
                            RelatedDocumentIds = new Guid[0],
                            SubjectId = new Guid("11111111-aaaa-aaaa-aaaa-111111111111"),
                            TenantId = new Guid("11111111-1111-1111-1111-111111111111"),
                            Title = "Hypertension Checkup"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            CreatedBy = "System",
                            CreatedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = new Guid("11111111-1111-1111-1111-111111111111"),
                            EmployeeId = new Guid("22222222-bbbb-bbbb-bbbb-222222222222"),
                            IsActive = false,
                            LastModifiedBy = "System",
                            ModifiedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReferralDetails = "Follow-up for diabetes management.",
                            ReferralStatus = 0,
                            RelatedDocumentIds = new Guid[0],
                            SubjectId = new Guid("22222222-bbbb-bbbb-bbbb-222222222222"),
                            TenantId = new Guid("11111111-1111-1111-1111-111111111111"),
                            Title = "Diabetes Follow-up"
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            CreatedBy = "System",
                            CreatedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = new Guid("11111111-1111-1111-1111-111111111111"),
                            EmployeeId = new Guid("33333333-cccc-cccc-cccc-333333333333"),
                            IsActive = false,
                            LastModifiedBy = "System",
                            ModifiedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReferralDetails = "Initial consultation for back pain.",
                            ReferralStatus = 0,
                            RelatedDocumentIds = new Guid[0],
                            SubjectId = new Guid("33333333-cccc-cccc-cccc-333333333333"),
                            TenantId = new Guid("11111111-1111-1111-1111-111111111111"),
                            Title = "Back Pain Consultation"
                        },
                        new
                        {
                            Id = new Guid("44444444-4444-4444-4444-444444444444"),
                            CreatedBy = "System",
                            CreatedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = new Guid("22222222-2222-2222-2222-222222222222"),
                            EmployeeId = new Guid("44444444-dddd-dddd-dddd-444444444444"),
                            IsActive = false,
                            LastModifiedBy = "System",
                            ModifiedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReferralDetails = "Annual physical examination.",
                            ReferralStatus = 0,
                            RelatedDocumentIds = new Guid[0],
                            SubjectId = new Guid("44444444-dddd-dddd-dddd-444444444444"),
                            TenantId = new Guid("22222222-2222-2222-2222-222222222222"),
                            Title = "Annual Physical Exam"
                        },
                        new
                        {
                            Id = new Guid("55555555-5555-5555-5555-555555555555"),
                            CreatedBy = "System",
                            CreatedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = new Guid("22222222-2222-2222-2222-222222222222"),
                            EmployeeId = new Guid("55555555-eeee-eeee-eeee-555555555555"),
                            IsActive = false,
                            LastModifiedBy = "System",
                            ModifiedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReferralDetails = "Referral for allergy testing.",
                            ReferralStatus = 0,
                            RelatedDocumentIds = new Guid[0],
                            SubjectId = new Guid("55555555-eeee-eeee-eeee-555555555555"),
                            TenantId = new Guid("22222222-2222-2222-2222-222222222222"),
                            Title = "Allergy Testing"
                        },
                        new
                        {
                            Id = new Guid("66666666-6666-6666-6666-666666666666"),
                            CreatedBy = "System",
                            CreatedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = new Guid("22222222-2222-2222-2222-222222222222"),
                            EmployeeId = new Guid("66666666-ffff-ffff-ffff-666666666666"),
                            IsActive = false,
                            LastModifiedBy = "System",
                            ModifiedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReferralDetails = "Consultation for asthma symptoms.",
                            ReferralStatus = 0,
                            RelatedDocumentIds = new Guid[0],
                            SubjectId = new Guid("66666666-ffff-ffff-ffff-666666666666"),
                            TenantId = new Guid("22222222-2222-2222-2222-222222222222"),
                            Title = "Asthma Consultation"
                        },
                        new
                        {
                            Id = new Guid("77777777-7777-7777-7777-777777777777"),
                            CreatedBy = "System",
                            CreatedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = new Guid("33333333-3333-3333-3333-333333333333"),
                            EmployeeId = new Guid("77777777-aaaa-aaaa-aaaa-777777777777"),
                            IsActive = false,
                            LastModifiedBy = "System",
                            ModifiedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReferralDetails = "Pre-surgery evaluation.",
                            ReferralStatus = 0,
                            RelatedDocumentIds = new Guid[0],
                            SubjectId = new Guid("77777777-aaaa-aaaa-aaaa-777777777777"),
                            TenantId = new Guid("33333333-3333-3333-3333-333333333333"),
                            Title = "Pre-Surgery Evaluation"
                        },
                        new
                        {
                            Id = new Guid("88888888-8888-8888-8888-888888888888"),
                            CreatedBy = "System",
                            CreatedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = new Guid("33333333-3333-3333-3333-333333333333"),
                            EmployeeId = new Guid("88888888-bbbb-bbbb-bbbb-888888888888"),
                            IsActive = false,
                            LastModifiedBy = "System",
                            ModifiedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReferralDetails = "Post-operative follow-up.",
                            ReferralStatus = 0,
                            RelatedDocumentIds = new Guid[0],
                            SubjectId = new Guid("88888888-bbbb-bbbb-bbbb-888888888888"),
                            TenantId = new Guid("33333333-3333-3333-3333-333333333333"),
                            Title = "Post-Op Follow-up"
                        },
                        new
                        {
                            Id = new Guid("99999999-9999-9999-9999-999999999999"),
                            CreatedBy = "System",
                            CreatedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = new Guid("33333333-3333-3333-3333-333333333333"),
                            EmployeeId = new Guid("99999999-cccc-cccc-cccc-999999999999"),
                            IsActive = false,
                            LastModifiedBy = "System",
                            ModifiedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReferralDetails = "Referral for physical therapy.",
                            ReferralStatus = 0,
                            RelatedDocumentIds = new Guid[0],
                            SubjectId = new Guid("99999999-cccc-cccc-cccc-999999999999"),
                            TenantId = new Guid("33333333-3333-3333-3333-333333333333"),
                            Title = "Physical Therapy Referral"
                        },
                        new
                        {
                            Id = new Guid("10101010-1010-1010-1010-101010101010"),
                            CreatedBy = "System",
                            CreatedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = new Guid("33333333-3333-3333-3333-333333333333"),
                            EmployeeId = new Guid("10101010-dddd-dddd-dddd-101010101010"),
                            IsActive = false,
                            LastModifiedBy = "System",
                            ModifiedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReferralDetails = "Consultation for migraine headaches.",
                            ReferralStatus = 0,
                            RelatedDocumentIds = new Guid[0],
                            SubjectId = new Guid("10101010-dddd-dddd-dddd-101010101010"),
                            TenantId = new Guid("33333333-3333-3333-3333-333333333333"),
                            Title = "Migraine Consultation"
                        });
                });

            modelBuilder.Entity("Server.Modules.Scheduling.Entities.Schedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<int>("AppointmentStatus")
                        .HasColumnType("integer");

                    b.Property<Guid>("ClinicianId")
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("End")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ModifiedById")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ReferralId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Start")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uuid");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ClinicianId");

                    b.HasIndex("ReferralId");

                    b.ToTable("Schedules", "scheduling");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            AppointmentStatus = 0,
                            ClinicianId = new Guid("11111111-1111-1111-1111-111111111111"),
                            CreatedBy = "System",
                            CreatedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = new Guid("11111111-1111-1111-1111-111111111111"),
                            Description = "Regular blood pressure monitoring and medication review",
                            EmployeeId = new Guid("11111111-aaaa-aaaa-aaaa-111111111111"),
                            End = new DateTime(2025, 4, 22, 10, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = false,
                            LastModifiedBy = "System",
                            ModifiedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ReferralId = new Guid("11111111-1111-1111-1111-111111111111"),
                            Start = new DateTime(2025, 4, 22, 9, 0, 0, 0, DateTimeKind.Utc),
                            Status = 0,
                            SubjectId = new Guid("11111111-aaaa-aaaa-aaaa-111111111111"),
                            TenantId = new Guid("11111111-1111-1111-1111-111111111111"),
                            Title = "Blood Pressure Check-up"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            AppointmentStatus = 0,
                            ClinicianId = new Guid("22222222-2222-2222-2222-222222222222"),
                            CreatedBy = "System",
                            CreatedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = new Guid("11111111-1111-1111-1111-111111111111"),
                            Description = "Review of blood sugar levels and medication adjustment",
                            EmployeeId = new Guid("22222222-bbbb-bbbb-bbbb-222222222222"),
                            End = new DateTime(2025, 4, 22, 11, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = false,
                            LastModifiedBy = "System",
                            ModifiedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ReferralId = new Guid("22222222-2222-2222-2222-222222222222"),
                            Start = new DateTime(2025, 4, 22, 10, 0, 0, 0, DateTimeKind.Utc),
                            Status = 0,
                            SubjectId = new Guid("22222222-bbbb-bbbb-bbbb-222222222222"),
                            TenantId = new Guid("11111111-1111-1111-1111-111111111111"),
                            Title = "Diabetes Follow-up"
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            AppointmentStatus = 0,
                            ClinicianId = new Guid("33333333-3333-3333-3333-333333333333"),
                            CreatedBy = "System",
                            CreatedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = new Guid("11111111-1111-1111-1111-111111111111"),
                            Description = "Initial evaluation of chronic lower back pain",
                            EmployeeId = new Guid("33333333-cccc-cccc-cccc-333333333333"),
                            End = new DateTime(2025, 4, 22, 12, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = false,
                            LastModifiedBy = "System",
                            ModifiedById = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ReferralId = new Guid("33333333-3333-3333-3333-333333333333"),
                            Start = new DateTime(2025, 4, 22, 11, 0, 0, 0, DateTimeKind.Utc),
                            Status = 0,
                            SubjectId = new Guid("33333333-cccc-cccc-cccc-333333333333"),
                            TenantId = new Guid("11111111-1111-1111-1111-111111111111"),
                            Title = "Back Pain Assessment"
                        });
                });

            modelBuilder.Entity("Server.Modules.Scheduling.Entities.Schedule", b =>
                {
                    b.HasOne("Server.Modules.Scheduling.Entities.Clinician", null)
                        .WithMany("CalendarItems")
                        .HasForeignKey("ClinicianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Server.Modules.Scheduling.Entities.Referral", null)
                        .WithMany("CalendarItems")
                        .HasForeignKey("ReferralId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Server.Modules.Scheduling.Entities.Clinician", b =>
                {
                    b.Navigation("CalendarItems");
                });

            modelBuilder.Entity("Server.Modules.Scheduling.Entities.Referral", b =>
                {
                    b.Navigation("CalendarItems");
                });
#pragma warning restore 612, 618
        }
    }
}
