// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Server.Modules.Clinical.Infrastructure.Database;

#nullable disable

namespace Server.Modules.Clinical.Infrastructure.Database.Migrations
{
    [DbContext(typeof(ClinicalDbContext))]
    partial class ClinicalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("clinical")
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Server.Modules.Clinical.Entities.CaseNote", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("AppointmentType")
                        .HasColumnType("integer");

                    b.Property<string>("CaseNotes")
                        .HasColumnType("text");

                    b.Property<long>("ClinicianId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("CreatedByKeycloakId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("FitForWorkStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("FollowUpDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FollowUpReasonForReferral")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFollowUpNeeded")
                        .HasColumnType("boolean");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ModifiedByKeycloakId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RecommendedAdjustments")
                        .HasColumnType("text");

                    b.Property<long>("SubjectId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("SubjectKeycloakId")
                        .HasColumnType("uuid");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("TenantKeycloakId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("CaseNotes", "clinical");
                });

            modelBuilder.Entity("Server.Modules.Clinical.Entities.ClinicalReport", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("AssessmentDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("ClinicianId")
                        .HasColumnType("bigint");

                    b.Property<string>("Company")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("CreatedByKeycloakId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateReportSubmitted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("JobRole")
                        .HasColumnType("text");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ModifiedByKeycloakId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ReportNotes")
                        .HasColumnType("text");

                    b.Property<int>("ReportType")
                        .HasColumnType("integer");

                    b.Property<long>("SubjectId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("SubjectKeycloakId")
                        .HasColumnType("uuid");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("TenantKeycloakId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("ClinicalReports", "clinical");
                });
#pragma warning restore 612, 618
        }
    }
}
